#!/bin/bash

# Check if the script is running with root privileges
if [[ $EUID -ne 0 ]]; then
    echo "This script must be run with root privileges. Please use 'sudo'."
    exit 1
fi

# Determine the Linux distribution
distro=""
if [ -f /etc/debian_version ]; then
    distro="debian"
elif [ -f /etc/lsb-release ] || [ -f /etc/lsb-release.d/* ]; then
    distro="ubuntu"
elif [ -f /etc/redhat-release ]; then
    if grep -qi "CentOS" /etc/redhat-release; then
        distro="centos"
    elif grep -qi "Fedora" /etc/redhat-release; then
        distro="fedora"
    fi
elif [ -f /etc/os-release ]; then
    if grep -qi "Kali" /etc/os-release; then
        distro="kali"
    fi
fi

if [ "$distro" = "debian" ] || [ "$distro" = "ubuntu" ]; then
    # Update the package list and install required dependencies
    apt update
    apt install -y software-properties-common
    add-apt-repository universe
    apt update
    apt install -y wget gnupg2 curl
elif [ "$distro" = "centos" ]; then
    # Update the package list and install required dependencies
    yum install -y epel-release
    yum install -y wget curl
elif [ "$distro" = "fedora" ]; then
    # Update the package list and install required dependencies
    dnf install -y wget curl
elif [ "$distro" = "kali" ]; then
    # Update the package list and install required dependencies
    apt update
    apt install -y wget gnupg2 curl
elif [ "$distro" = "arch" ]; then
    # Update the package list and install required dependencies
    pacman -Syy --noconfirm wget curl
else
    echo "Unsupported Linux distribution. Exiting..."
    exit 1
fi

# Add the OpenVAS GPG key
wget -qO - http://apt.openvas.org/gpgkey | apt-key add -

# Add the OpenVAS repository to the sources list
if [ "$distro" = "debian" ] || [ "$distro" = "ubuntu" ] || [ "$distro" = "kali" ]; then
    echo "deb http://apt.openvas.org/bionic-bionic main" > /etc/apt/sources.list.d/openvas.list
elif [ "$distro" = "centos" ]; then
    echo -e "[atomic]\nname=Atomic OpenVAS\nbaseurl=http://download.opensuse.org/repositories/security:/OpenVAS:/UNSTABLE:/v9:/CentOS_8/ ./" > /etc/yum.repos.d/openvas.repo
elif [ "$distro" = "fedora" ]; then
    dnf copr enable -y zwon/openvas
fi

# Update the package list again
if [ "$distro" = "debian" ] || [ "$distro" = "ubuntu" ] || [ "$distro" = "kali" ]; then
    apt update
elif [ "$distro" = "centos" ]; then
    yum update
elif [ "$distro" = "fedora" ]; then
    dnf update
fi

# Install OpenVAS packages
if [ "$distro" = "debian" ] || [ "$distro" = "ubuntu" ] || [ "$distro" = "kali" ]; then
    apt install -y openvas
elif [ "$distro" = "centos" ]; then
    yum install -y openvas
elif [ "$distro" = "fedora" ]; then
    dnf install -y greenbone-security-assistant
fi

# Configure and update OpenVAS
greenbone-nvt-sync
greenbone-scapdata-sync
greenbone-certdata-sync

# Start the OpenVAS services
if [ "$distro" = "debian" ] || [ "$distro" = "ubuntu" ] || [ "$distro" = "kali" ]; then
    systemctl start openvas-gsa
    systemctl start openvas-gvm
    systemctl start openvas-scanner

    # Enable OpenVAS to start on boot
    systemctl enable openvas-gsa
    systemctl enable openvas-gvm
    systemctl enable openvas-scanner
fi

# Set up the OpenVAS admin user
openvasmd --create-user=admin --role=Admin
openvasmd --user=admin --new-password=YOUR_ADMIN_PASSWORD

# Rebuild the OpenVAS NVT database
openvasmd --rebuild --progress

# Print instructions on accessing OpenVAS Web UI
echo "OpenVAS has been installed successfully!"
if [ "$distro" = "debian" ] || [ "$distro" = "ubuntu" ] || [ "$distro" = "kali" ]; then
    echo "You can now access the OpenVAS Web UI at https://localhost:9392/"
elif [ "$distro" = "centos" ]; then
    echo "You can now access the OpenVAS Web UI at https://localhost:4000/"
fi
echo "Use the following credentials to log in:"
echo "Username: admin"
echo "Password: YOUR_ADMIN_PASSWORD (the password you set above)"

exit 0
